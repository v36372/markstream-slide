
An application of audio data hiding: radio broadcast as a high utility service.
Graduation thesis defense.
20 Aug 2016
Tags: audio data hiding, advertising, watermarking

Trong-Tin Nguyen
Advanced Program in Computer Science
nttin@apcs.vn
https://github.com/v36372

* Introduction

* The fast growing Internet

For many recent years, the Internet has been expanding constantly in both size and velocity.

- There are nearly 3.5 billion internet users at the moment 
- In 1995, only 1% of the world population has an internet connection. This portion has been increasing non-stop since then and reached 40% today.

.link http://www.internetlivestats.com/internet-users/ According to Internet Live Stats

It is the foundation for the booming of many new businesses like Internet radio broadcasting.

* Internet radio broadcasting

Reports say 57% of the 12-and-older U.S population listen to internet radio monthly. And by that means, this is an area worth investing in when it has such a large audience base.

.image monthly-online-listening.png 480 900 

* Advertising on Internet radio

The rapid growth in advertising revenue is making Internet radio a large advertising market & a critical element of overall radio ad marke

.image internet-radio-revenue.png 480 900

* Advertising difficulties

There is a classic obstacle that every advertisers face. To increase audience engagement as many as possible. To do that, advertisers often try to add more content surround the actual advertisement, help audience choose their product.

.link https://drive.google.com/file/d/0B-Eg0HwuhlrzZnFyN3lmVkhBNU0/view Sample advertisement.

Therefore, the question arises that how can we augement the advertisement with extra information when our bandwidth is limited by a stream of audio data?

* Audio watermarking

* Audio watermarking | Introduction

Audio watermarking is a technique able to embed information into audio content. The primary property of audiowatermarking is that the embedded data is transparent to perception of human on. 

We exploit this feature to develope a novel system for enhancing the advertising function of radio broadcast services.

In specifics, we employ the audio data hiding method of dynamic phase coding, originally suggested by Dr. Ngo Minh Nhut. 

.link http://www.eurasip.org/Proceedings/Eusipco/Eusipco2015/papers/1570104339.pdf Original paper.

* Audio watermarking | Watermarking Processes

.image watermarkingprocess.svg

* Audio watermarking | Audio Frames

Divide audio data into frames to process, employ Fourier Transform 

- Keep the physics properties intact. If we apply FFT to the whole file, the resulting frequencies are not correct.

- Easier for streaming purpose.

* Audio watermarking | Parameters

- Samples per frame or frame length

- How many samples would be use for watermarking?

.code watermarkingexample.go

* Audio watermarking | Dynamic Phase Coding

For each embedding samples, the amount of phase modification is dependent on the quantization index modulation step side.

The larger the magnitude spectrum, the lower the step side.

- If the array of step sizes are too small, it can cause embedding incorrectness

- If the array of step sizes are too big, it can degrade  audio quality.

.code QIM_illustrate.go

* Proposed Internet Radio Broadcasting System

* Vision

We'd like to setup a server to constantly stream audio data to the Internet. The game-changing point happens when we encounter an advertisement. On the server, we would employ audio data hiding and embedd advertising data into the audio stream and send to clients as normal. 

On the other hand, the clients would extract and display useful advertising information while the advertisement itself is served to audience.

.image streaming_illustration.svg

* Engineering choices

We choose Golang as the primary programming language to illustrate our idea. It is fast, easy to write and understand.

For the front end of our project, we would like it to be up and running as fast as possible, we chose Javascript to implement a simple web application to receive and process data from the server, which is implemented in Golang.

For the server and client to communicate, we establish a websocket connection that lives until the client disconects.

* System Implementation

* Server application

We have our setup simplified by dividing into modules responsible for their specific functionalities.

.image system.svg

* Client application setup

.image client.svg

* Project Demo

.link http://markstream.tintrongnguyen.me

* System evaluation

Going back to the original cause of enhancing audience engagement with internet radio advertising, we would like to evaluate our complete system against this feature.

By recording and compare the amount of user interaction with normal advertisements and our augmented ads, it can reveal many insights about how our system changes the way people perceive ads.

It appears that our framework increase the advertisement efficiency to some extent. Users tend to follow the advertisement further and rely on our extra information to reach the product.

* References

.link http://golang.org/ Golang
